# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2020-04-28 15:42
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import embed_video.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('leon_image', models.ImageField(null=True, upload_to='aboutus/authors/leon')),
                ('magda_image', models.ImageField(null=True, upload_to='aboutus/authors/magda')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField()),
            ],
            options={
                'verbose_name_plural': 'About Us',
            },
        ),
        migrations.CreateModel(
            name='AboutUsImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='aboutus/authors')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abus_images', to='entry.AboutUs')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('image', models.ImageField(null=True, upload_to='countries/')),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='EntryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='images/%Y/%m/%d')),
            ],
        ),
        migrations.CreateModel(
            name='EntryInteface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('author', models.CharField(max_length=400)),
                ('short_body', models.TextField()),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('publish', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title_image', models.ImageField(null=True, upload_to='images/%Y/%m/%d')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField()),
                ('entry_video', embed_video.fields.EmbedVideoField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='EntrySmallTip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tip', models.CharField(max_length=600)),
            ],
        ),
        migrations.CreateModel(
            name='EntryVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', embed_video.fields.EmbedVideoField()),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('entryinteface_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entry.EntryInteface')),
            ],
            options={
                'verbose_name_plural': 'entries',
            },
            bases=('entry.entryinteface',),
        ),
        migrations.CreateModel(
            name='EntryTipFullArticle',
            fields=[
                ('entryinteface_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='entry.EntryInteface')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tip_full_article', to='entry.Entry')),
            ],
            options={
                'verbose_name_plural': 'tips',
            },
            bases=('entry.entryinteface',),
        ),
        migrations.AddField(
            model_name='entryinteface',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country', to='entry.Country'),
        ),
        migrations.AddField(
            model_name='entryinteface',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='entryvideo',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='entry.Entry'),
        ),
        migrations.AddField(
            model_name='entrysmalltip',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tip', to='entry.Entry'),
        ),
        migrations.AddField(
            model_name='entryimage',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='entry.Entry'),
        ),
    ]
